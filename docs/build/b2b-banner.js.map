{"version":3,"file":"b2b-banner.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/assets/fmh-b2b-banking-corporate-services.svelte","../../src/assets/fmh-b2b-info-services.svelte","../../src/assets/fmh-b2b-press-services.svelte","../../src/assets/fmh-b2b-publishing-services.svelte","../../src/assets/chevron-left.svelte","../../src/AppB2BBanner.svelte","../../src/main-b2b-banner.js","../../../mk-data-attribute/index.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.4' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<svg width=\"76px\" height=\"76px\" viewBox=\"0 0 76 76\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n  <g id=\"Banking-Corporate-Services\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n    <polygon id=\"Path-Copy-2\" points=\"0 0 76 0 76 76 0 76\"/>\n    <path d=\"M70,19 L70,57 L38.5,57 L38.5,50.5 L64.5,50.5 L64.5,24.5 L38.5,24.5 L38.5,19 L70,19 Z M59.5,40.5 L59.5,45.5 L54,45.5 L54,40.5 L59.5,40.5 Z M49,40.5 L49,45.5 L43.5,45.5 L43.5,40.5 L49,40.5 Z M59.5,30 L59.5,35 L54,35 L54,30 L59.5,30 Z M49,30 L49,35 L43.5,35 L43.5,30 L49,30 Z\" id=\"Combined-Shape\" fill=\"#1194DB\"/>\n    <path d=\"M44.5,8 L44.5,57 L6,57 L6,8 L44.5,8 Z M38.5,45.5 L33,45.5 L33,51 L38.5,51 L38.5,45.5 Z M28,45.5 L22.5,45.5 L22.5,51 L28,51 L28,45.5 Z M17.5,45.5 L12,45.5 L12,51 L17.5,51 L17.5,45.5 Z M38.5,35 L33,35 L33,40.5 L38.5,40.5 L38.5,35 Z M28,35 L22.5,35 L22.5,40.5 L28,40.5 L28,35 Z M17.5,35 L12,35 L12,40.5 L17.5,40.5 L17.5,35 Z M38.5,24.5 L33,24.5 L33,30 L38.5,30 L38.5,24.5 Z M28,24.5 L22.5,24.5 L22.5,30 L28,30 L28,24.5 Z M17.5,24.5 L12,24.5 L12,30 L17.5,30 L17.5,24.5 Z M38.5,14 L33,14 L33,19.5 L38.5,19.5 L38.5,14 Z M28,14 L22.5,14 L22.5,19.5 L28,19.5 L28,14 Z M17.5,14 L12,14 L12,19.5 L17.5,19.5 L17.5,14 Z\" id=\"Combined-Shape\" fill=\"#1194DB\"/>\n    <polygon id=\"Path-3\" fill=\"#5FD5FF\" points=\"0 71 16 55 26 65 41 50 51 60 71 40 76 45 76 30 61 30 66 35 51 50 41 40 26 55 16 45 0 61\"/>\n  </g>\n</svg>\n","<svg width=\"77px\" height=\"76px\" viewBox=\"0 0 77 76\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n  <g id=\"Info-Services\" transform=\"matrix(1, 0, 0, 1, 0.833313, 0)\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n    <polygon id=\"Path-Copy-2\" points=\"0.166666667 0 76.1666667 0 76.1666667 76 0.166666667 76\"/>\n    <g id=\"Desktop\" transform=\"translate(0.000000, 8.000000)\" fill=\"#1194DB\">\n      <path d=\"M58.1818182,0 L5.81818182,0 C2.61818182,0 0,2.61818182 0,5.81818182 L0,40.7272727 C0,43.9272727 2.61818182,46.5454545 5.81818182,46.5454545 L26.1818182,46.5454545 L26.1818182,52.2666667 L20.3636364,52.2666667 L20.3636364,57.6 L43.6363636,57.6 L43.6363636,52.2666667 L37.8181818,52.2666667 L37.8181818,46.5454545 L58.1818182,46.5454545 C61.3818182,46.5454545 64,43.9272727 64,40.7272727 L64,5.81818182 C64,2.61818182 61.3818182,0 58.1818182,0 Z M58.3871658,40.9326203 L6.02352941,40.9326203 L6.02352941,6.02352941 L58.3871658,6.02352941 L58.3871658,40.9326203 Z\" id=\"Shape\" fill-rule=\"nonzero\"/>\n      <path d=\"M19.741193,12 L19.741193,15.5218175 L15.7035228,15.5218175 L15.7035228,20.8647718 L19.2253403,20.8647718 L19.2253403,24.3859087 L15.7035228,24.3859087 L15.7035228,33.25 L12,33.25 L12,12 L19.741193,12 Z M28.1363891,12 L30.6863891,20.0753403 L33.2363891,12 L36.9705364,12 L36.9705364,33.25 L33.4180945,33.25 L33.4180945,20.3482386 L30.7163331,28.4535228 L30.6557646,28.4535228 L27.9540032,20.3482386 L27.9540032,33.25 L24.4022418,33.25 L24.4022418,12 L28.1363891,12 Z M45.4535228,12 L45.4535228,20.8035228 L48.6718175,20.8035228 L48.6718175,12 L52.3753403,12 L52.3753403,33.25 L48.6718175,33.25 L48.6718175,24.3253403 L45.4535228,24.3253403 L45.4535228,33.25 L41.75,33.25 L41.75,12 L45.4535228,12 Z\" id=\"Combined-Shape\"/>\n    </g>\n    <g id=\"Notification\" transform=\"translate(35.226667, 36.300000)\" fill=\"#5FD5FF\" fill-rule=\"nonzero\">\n      <path d=\"M19.94,39.7 C22.14,39.7 23.94,37.9 23.94,35.7 L15.94,35.7 C15.94,37.9 17.72,39.7 19.94,39.7 Z M31.94,27.7 L31.94,17.7 C31.94,11.56 28.66,6.42 22.94,5.06 L22.94,3.7 C22.94,2.04 21.6,0.7 19.94,0.7 C18.28,0.7 16.94,2.04 16.94,3.7 L16.94,5.06 C11.2,6.42 7.94,11.54 7.94,17.7 L7.94,27.7 L3.94,31.7 L3.94,33.7 L35.94,33.7 L35.94,31.7 L31.94,27.7 Z\" id=\"Shape\"/>\n      <path d=\"M11.1,2.86 L8.24,0 C3.44,3.66 0.28,9.3 0,15.7 L4,15.7 C4.3,10.4 7.02,5.76 11.1,2.86 L11.1,2.86 Z\" id=\"Path\"/>\n      <path d=\"M35.88,15.7 L39.88,15.7 C39.58,9.3 36.42,3.66 31.64,0 L28.8,2.86 C32.84,5.76 35.58,10.4 35.88,15.7 Z\" id=\"Path\"/>\n    </g>\n  </g>\n</svg>\n","<svg width=\"76px\" height=\"76px\" viewBox=\"0 0 76 76\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n  <title>Presse-Services</title>\n  <g id=\"Presse-Services\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n    <polygon id=\"Path-Copy-2\" points=\"0 0 76 0 76 76 0 76\"/>\n    <path d=\"M45.8988701,8 L60.8988701,23 L60.8988701,53 C60.8988701,55.75 58.6488701,58 55.8988701,58 L55.8988701,58 L43.411,58 L43.4115273,53 L55.8988701,53 L55.8988701,25.5 L43.3988701,25.5 L43.3988701,12 L21,12.000086 C21.4665241,9.7249205 23.4910393,8 25.8988701,8 L25.8988701,8 L45.8988701,8 Z\" id=\"Combined-Shape\" fill=\"#1194DB\" fill-rule=\"nonzero\"/>\n    <path d=\"M13.5,50 L33.5,50 L33.5,55 L13.5,55 L13.5,50 Z M13.5,40 L33.5,40 L33.5,45 L13.5,45 L13.5,40 Z M28.5,15 L8.5,15 C5.75,15 3.5,17.25 3.5,20 L3.5,60 C3.5,62.75 5.725,65 8.475,65 L38.5,65 C41.25,65 43.5,62.75 43.5,60 L43.5,30 L28.5,15 Z M38.5,60 L8.5,60 L8.5,20 L26,20 L26,32.5 L38.5,32.5 L38.5,60 Z\" id=\"Shape-Copy\" fill=\"#1194DB\" fill-rule=\"nonzero\"/>\n    <path d=\"M46,40 L46,70 L36,70 L36,40 L46,40 Z M61,20 L61,70 L51,70 L51,20 L61,20 Z M76,32 L76,70 L66,70 L66,32 L76,32 Z\" id=\"Combined-Shape\" fill=\"#5FD5FF\"/>\n  </g>\n</svg>\n","<svg width=\"76px\" height=\"76px\" viewBox=\"0 0 76 76\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n  <title>Pubilshing Services</title>\n  <g id=\"Pubilshing-Services\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n    <path d=\"M76,0 L76,76 L0,76 L0,0 L76,0 Z\" id=\"Path-Copy-3\"/>\n    <path d=\"M37.973,6 C23.069,6 11,18.096 11,33 C11,47.904 23.069,60 37.973,60 C52.904,60 65,47.904 65,33 C65,18.096 52.904,6 37.973,6 Z M56.684,22.2 L48.719,22.2 C47.855,18.825 46.613,15.585 44.993,12.588 C49.961,14.289 54.092,17.745 56.684,22.2 Z M38,11.508 C40.241,14.748 41.996,18.339 43.157,22.2 L32.843,22.2 C34.004,18.339 35.759,14.748 38,11.508 Z M17.102,38.4 C16.67,36.672 16.4,34.863 16.4,33 C16.4,31.137 16.67,29.328 17.102,27.6 L26.228,27.6 C26.012,29.382 25.85,31.164 25.85,33 C25.85,34.836 26.012,36.618 26.228,38.4 L17.102,38.4 Z M19.316,43.8 L27.281,43.8 C28.145,47.175 29.387,50.415 31.007,53.412 C26.039,51.711 21.908,48.282 19.316,43.8 L19.316,43.8 Z M27.281,22.2 L19.316,22.2 C21.908,17.718 26.039,14.289 31.007,12.588 C29.387,15.585 28.145,18.825 27.281,22.2 L27.281,22.2 Z M38,54.492 C35.759,51.252 34.004,47.661 32.843,43.8 L43.157,43.8 C41.996,47.661 40.241,51.252 38,54.492 Z M44.318,38.4 L31.682,38.4 C31.439,36.618 31.25,34.836 31.25,33 C31.25,31.164 31.439,29.355 31.682,27.6 L44.318,27.6 C44.561,29.355 44.75,31.164 44.75,33 C44.75,34.836 44.561,36.618 44.318,38.4 Z M44.993,53.412 C46.613,50.415 47.855,47.175 48.719,43.8 L56.684,43.8 C54.092,48.255 49.961,51.711 44.993,53.412 L44.993,53.412 Z M49.772,38.4 C49.988,36.618 50.15,34.836 50.15,33 C50.15,31.164 49.988,29.382 49.772,27.6 L58.898,27.6 C59.33,29.328 59.6,31.137 59.6,33 C59.6,34.863 59.33,36.672 58.898,38.4 L49.772,38.4 Z\" id=\"Shape\" fill=\"#1194DB\" fill-rule=\"nonzero\"/>\n    <path d=\"M58,63 L38,63 L38,68 L58,68 L58,63 Z M76,52 L76,58 L38,58 L38,52 L76,52 Z M76,41 L76,47 L38,47 L38,41 L76,41 Z M38,30 L38,36 L76,36 L76,30 L38,30 Z\" id=\"Shape\" fill=\"#5FD5FF\" fill-rule=\"nonzero\"/>\n  </g>\n</svg>\n","<svg\n  width=\"100%\"\n  height=\"100%\"\n  viewBox=\"0 0 24 24\"\n  version=\"1.1\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  class=\"chevron {flipClass} \"  \n>\n  <polygon\n    points=\"9.522 18 8 16.59 12.945 12 8 7.41 9.522 6 16 12\"\n    transform=\"matrix(-1, 0, 0, -1, 24, 24)\"\n    fill-rule=\"nonzero\"\n    stroke=\"none\"\n    class=\"chevron__polygon { active ? 'chevron__polygon--active' : '' }\"\n  />\n</svg>\n<script>\n  export let active = false;\n  export let flip = false;\n  let flipClass = flip ? 'chevron--flip' : '';\n</script>\n<style type=\"text/scss\">\n   @import '../css/colors.scss';\n  .chevron {\n    &__polygon {\n      width: 100%;\n      height: 100%;\n      fill: rgba(white, 0.3);\n    }\n    &--flip {\n      transform: scaleX(-1);\n    }\n    &__polygon { \n      &--active {\n        fill: white;\n      }\n    }\n  }\n</style>\n","<script>\n  import { onMount } from 'svelte';\n\n  const DISPLAY_TYPE_GENERAL = 'general';\n  const DISPLAY_TYPE_MORTGAGE_RESEARCH = 'mg';\n\n  export let displayType = DISPLAY_TYPE_MORTGAGE_RESEARCH; //DISPLAY_TYPE_GENERAL;\n\n  const displayDefintions = {\n    [DISPLAY_TYPE_GENERAL]: {\n      imgUrl(size) {\n        return `https://www.fmh.de/resources/assets/1762/${size}/c8c2ac41cdecb1817a0e9f7b51efbe6ad78747cc-burning-planet.jpg`;\n      },\n      box: {\n        question: 'Schon gewusst?',\n        answer: `Mehr als 300 europäische Unternehmen nutzen bereits unsere\n        Daten und Service für ihren Erfolg`,\n        ctaLabel: 'Was können wir für Sie tun?',\n        ctaText: 'Jetzt beraten lassen',\n        link: '/banking-corporate-service',\n      },\n    },\n    [DISPLAY_TYPE_MORTGAGE_RESEARCH]: {\n      imgUrl(size) {\n        return `https://www.fmh.de/resources/assets/1789/${size}/d596912241d8c877dc85a93c0cdaa6c2b588e998-mortgage-research.jpg`;\n      },\n      box: {\n        question: 'Neue Studie',\n        answer: `Marktkompass 2022: Baufinanzierung und\n        Turbulenzen<br/>Einblick. Ausblick. Durckblick.`,\n        ctaLabel: 'Eine Studie von FMH X und SWI Finance',\n        ctaText: 'Mehr erfahren',\n        link: 'https://www.fmhx.de/studie-marktkompass-baufinanzierung-2022',\n      },\n    },\n  };\n  const displayDef = displayDefintions[displayType];\n  let slider = null;\n  let sliderItemIndex = 0;\n  let sliderItemsLength = 0;\n  let touchedHandle = '';\n\n  import BankingIcon from './assets/fmh-b2b-banking-corporate-services.svelte';\n  import InfoIcon from './assets/fmh-b2b-info-services.svelte';\n  import PressServicesIcon from './assets/fmh-b2b-press-services.svelte';\n  import PublishingServicesIcon from './assets/fmh-b2b-publishing-services.svelte';\n  import ChevronLeftIcon from './assets/chevron-left.svelte';\n\n  const debounce = (func, wait) => {\n    let timeout;\n\n    return function executedFunction(...args) {\n      const later = () => {\n        clearTimeout(timeout);\n        func(...args);\n      };\n\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  };\n\n  function imgUrl(size) {}\n\n  function filterTagChildren(parentNode) {\n    const children = [...parentNode.childNodes].filter((n) => n.tagName);\n    return children;\n  }\n\n  function avgItemWidth(parentNode) {\n    const tagChildren = filterTagChildren(parentNode);\n    return (\n      tagChildren.reduce((sum, child) => sum + child.clientWidth, 0) /\n      tagChildren.length\n    );\n  }\n\n  $: touchedLeftHandle = touchedHandle === 'left';\n  $: touchedRightHandle = touchedHandle === 'right';\n  $: activeLeftHandle = Math.abs(sliderItemIndex) > 0;\n  $: activeRightHandle = Math.abs(sliderItemIndex) < sliderItemsLength - 2;\n\n  function moveElement(ele, x) {\n    const animation = ele.animate(\n      [\n        //{ transform: `translateX(${startAt})` },\n        { transform: `translateX(${x}px)` },\n      ],\n      {\n        duration: 500,\n        easing: 'ease-in-out',\n        //easing: 'linear',\n        fill: 'forwards',\n      }\n    );\n    animation.onfinish = (ev) => {\n      console.log('animation finished', ev);\n    };\n    //animation.pause();\n  }\n\n  onMount(() => {\n    sliderItemsLength = filterTagChildren(slider).length;\n    window.addEventListener(\n      'resize',\n      debounce((ev) => {\n        //console.log('debounce ev', ev);\n        const x = 0;\n        moveElement(slider, x);\n      }, 500),\n      true\n    );\n    if (window.DeviceOrientationEvent) {\n      window.addEventListener(\n        'orientationchange',\n        (ev) => {\n          // console.log(ev);\n          const x = 0;\n          moveElement(slider, x);\n        },\n        true\n      );\n    }\n  });\n\n  function slideLeft(ev) {\n    if (!activeLeftHandle) {\n      return false;\n    }\n    ev.preventDefault();\n    sliderItemIndex += 1;\n    //if (sliderItemIndex <= 0) {\n    //  sliderItemIndex = 0;\n    //}\n    return slide(ev);\n  }\n\n  function slideRight(ev) {\n    if (!activeRightHandle) {\n      return false;\n    }\n    ev.preventDefault();\n    sliderItemIndex -= 1;\n    if (sliderItemIndex >= sliderItemsLength - 2) {\n      sliderItemIndex = sliderItemsLength - 2;\n    }\n    return slide(ev);\n  }\n\n  function slide(ev) {\n    console.log('ev:', ev);\n    console.log('ev:', ev.clientX);\n    let scrollWidth = avgItemWidth(slider);\n    let x = sliderItemIndex * scrollWidth;\n    moveElement(slider, x);\n  }\n</script>\n\n<template>\n  <div class=\"b2b-banner\">\n    <div class=\"b2b-banner__wrapper\">\n      <picture class=\"b2b-banner__picture\">\n        <source\n          media=\"(max-width: 799px)\"\n          srcset={displayDef.imgUrl('giant')}\n        />\n        <source\n          media=\"(min-width: 800px)\"\n          srcset={displayDef.imgUrl('original')}\n        />\n        <img\n          class=\"b2b-banner__img\"\n          src={displayDef.imgUrl('original')}\n          alt=\"FMH Firmenkunden\"\n          loading=\"lazy\"\n          width=\"800\"\n          height=\"320\"\n        />\n      </picture>\n      <a class=\"b2b-banner__box\" href={displayDef.box.link}>\n        <span class=\"b2b-banner__box-question\">{@html displayDef.box.question}</span>\n        <span class=\"b2b-banner__box-answer\">\n          {@html displayDef.box.answer}\n        </span>\n        <span class=\"b2b-banner__box-can-we-help\">\n          {displayDef.box.ctaLabel}\n        </span>\n        <span class=\"b2b-banner__box-link\"> {displayDef.box.ctaText} </span>\n      </a>\n      <footer class=\"b2b-banner__slider\">\n        <div class=\"b2b-banner__slider-wrapper\">\n          <ul class=\"b2b-banner__slider-list\" dir=\"ltr\" bind:this={slider}>\n            <a\n              role=\"listitem\"\n              class=\"b2b-banner__slider-item\"\n              href=\"/banking-corporate-service\"\n              title=\"Banking &amp; Corporate Services\"\n            >\n              <BankingIcon />\n              <span class=\"b2b-banner__slider-caption\">\n                Banking &amp; Corporate Services\n              </span>\n            </a>\n            <a\n              role=\"listitem\"\n              class=\"b2b-banner__slider-item\"\n              href=\"/banking-corporate-service\"\n              title=\"Publishing Services\"\n            >\n              <PublishingServicesIcon />\n              <span class=\"b2b-banner__slider-caption\">\n                Publishing Services\n              </span>\n            </a>\n            <a\n              role=\"listitem\"\n              class=\"b2b-banner__slider-item\"\n              href=\"/fuer-redaktionen\"\n              title=\"Presse Services\"\n            >\n              <PressServicesIcon />\n              <span class=\"b2b-banner__slider-caption\"> Presse-Services </span>\n            </a>\n            <a\n              role=\"listitem\"\n              class=\"b2b-banner__slider-item\"\n              href=\"/banking-corporate-service\"\n              title=\"Info-Services\"\n            >\n              <InfoIcon />\n              <span class=\"b2b-banner__slider-caption\"> Info-Services </span>\n            </a>\n          </ul>\n        </div>\n        <div\n          class=\"b2b-banner__slider-handle b2b-banner__slider-handle--left\n{activeLeftHandle ? 'b2b-banner__slider-handle--active' : ''}\n{touchedLeftHandle ? 'b2b-banner__slider-handle--touch' : ''}\n\"\n          on:click={slideLeft}\n          on:touchstart={() => (touchedHandle = 'left')}\n          on:touchend={() => (touchedHandle = '')}\n        >\n          <div\n            class=\"b2b-banner__slider-handle-icon \n            {activeLeftHandle ? 'b2b-banner__slider-handle-icon--active' : ''}\"\n          >\n            <ChevronLeftIcon active={activeLeftHandle} />\n          </div>\n        </div>\n        <div\n          class=\"b2b-banner__slider-handle b2b-banner__slider-handle--right\n{activeLeftHandle ? 'b2b-banner__slider-handle--active' : ''}\n{touchedRightHandle ? 'b2b-banner__slider-handle--touch' : ''}\n\"\n          on:click={slideRight}\n          on:touchstart={() => (touchedHandle = 'right')}\n          on:touchend={() => (touchedHandle = '')}\n        >\n          <div\n            class=\"b2b-banner__slider-handle-icon\n              {activeRightHandle\n              ? 'b2b-banner__slider-handle-icon--active'\n              : ''}\"\n          >\n            <ChevronLeftIcon flip=\"true\" active={activeRightHandle} />\n          </div>\n        </div>\n      </footer>\n    </div>\n  </div>\n</template>\n\n<style type=\"text/scss\">\n  @import './css/buttons.scss';\n  @import './css/colors.scss';\n  @import './css/fonts.scss';\n  $handleWidth: 60px;\n  .b2b-banner {\n    margin: 0 auto;\n    box-sizing: border-box;\n\n    & * {\n      padding: 0;\n      box-sizing: border-box;\n      margin: 0;\n      border: 0;\n    }\n\n    padding: 0 20px;\n    &__wrapper {\n      padding: 30px 0 0 0;\n      overflow: hidden;\n      position: relative;\n      margin-left: auto;\n      margin-right: auto;\n      max-width: 1210px;\n    }\n    &__box {\n      text-decoration: none;\n      display: block;\n      position: relative;\n      max-width: 480px;\n      padding: 30px 40px 25px;\n      background-color: $color__primary--lighter-a;\n      margin-bottom: 27px;\n    }\n\n    &__box-answer,\n    &__box-question,\n    &__box-can-we-help {\n      letter-spacing: 0.0125em;\n    }\n\n    &__box-answer,\n    &__box-question {\n      line-height: calc(24px * 1.2);\n      font-size: 24px;\n    }\n    &__box-question {\n      color: $color__primary--tender;\n    }\n    &__box-answer {\n      color: white;\n    }\n    &__box-answer,\n    &__box-question,\n    &__box-can-we-help,\n    &__box-link {\n      display: block;\n      font-family: $font-family__primary;\n    }\n    &__box-question {\n      font-family: $font-family__primary;\n    }\n    &__box-answer {\n      font-family: $font-family__primary;\n    }\n    &__box-can-we-help {\n      font-size: 16px;\n      margin: 1em 0;\n      line-height: 1.4em;\n      font-family: $font-family__primary;\n      font-weight: 300;\n      color: white;\n    }\n    &__box-link {\n      transition: all 0.3s linear;\n      letter-spacing: 0.085em;\n      padding: 0.5em 0;\n      line-height: 1.4em;\n      font-weight: normal;\n      text-decoration: none;\n      color: white;\n      font-family: $font-family__primary;\n      border-radius: 4px;\n      text-align: center;\n      display: block;\n      font-size: 16px;\n      font-family: $font-family__primary;\n      margin: 10px 0;\n      text-transform: uppercase;\n      background-color: $color__primary--lighter;\n    }\n    &__picture {\n      left: 0;\n      top: 0;\n      display: block;\n      position: absolute;\n      overflow: hidden;\n    }\n    &__img {\n      margin-left: 100px;\n      display: block;\n      width: 120%; //calc(vw - 100px); //auto;\n      min-width: 800px;\n      height: auto;\n      transform: scaleX(-1);\n    }\n    &__slider {\n      margin: auto 0 0 0;\n      position: relative;\n      background-color: $color__primary--lighter;\n      transition: all 0.3s linear;\n    }\n    &__slider-wrapper {\n      position: relative;\n      width: 100%;\n      height: 100%;\n    }\n    &__slider-list {\n      position: relative;\n      justify-content: space-evenly;\n      list-style: none;\n      display: flex;\n    }\n    &__slider-item {\n      text-decoration: none;\n      position: relative;\n      letter-spacing: 0.025em;\n      padding: 12px 0;\n      text-align: center;\n      width: 25%;\n      max-width: 200px;\n      transition: background-color 0.3s linear;\n      &:hover,\n      &:active {\n        background-color: rgba(black, 0.18);\n        cursor: pointer;\n      }\n    }\n    &__slider-caption {\n      color: white;\n      font-family: $font-family__primary;\n      display: block;\n    }\n    &__box:hover {\n      cursor: pointer;\n      .b2b-banner__box-link {\n        background-color: white;\n        color: $color__primary;\n      }\n    }\n    &__slider-handle {\n      background-color: $color__primary--lighter;\n      height: 0;\n      overflow-y: hidden;\n      width: $handleWidth;\n      position: absolute;\n      top: 0;\n      transition: background-color 0.3s linear;\n      &--left {\n        left: 0;\n      }\n      &--right {\n        right: 0;\n      }\n      &--active {\n        cursor: pointer;\n        pointer-events: auto;\n        &:hover,\n        .b2b-banner__slider-handle--touch {\n          // background-color: rgba(black, 0.18);\n          background-color: $color__primary--dark;\n        }\n      }\n    }\n    &__slider-handle-icon {\n      $dim: 60px;\n      transform: translateY(20%);\n      position: absolute;\n      top: 0;\n      transform: translateY(50%);\n      width: $dim;\n      height: $dim;\n    }\n  }\n\n  // max-width must include 40px of left (20px) and right (20px) margin\n  @media (max-width: 560px) {\n    .b2b-banner {\n      padding: 0;\n      &__box {\n        margin-left: auto;\n        margin-right: auto;\n      }\n      &__img {\n        margin-left: 0;\n      }\n      &__slider {\n        //white-space: nowrap;\n      }\n      &__slider-wrapper {\n        overflow-x: scroll;\n        margin-left: $handleWidth;\n        margin-right: $handleWidth;\n        scrollbar-width: none; /* Firefox */\n        -ms-overflow-style: none; /* IE 10+ * */\n        -webkit-overflow-scrolling: touch;\n        &::-webkit-scrollbar {\n          background: transparent;\n          width: 0px;\n          height: 0px;\n        }\n      }\n      &__slider-list {\n        gap: 0;\n        justify-content: space-between;\n        // indent left by width of handle\n      }\n      &__slider-item {\n        min-width: 200px;\n        scroll-snap-align: start; // center\n        scroll-snap-stop: always;\n      }\n      &__slider-handle {\n        height: 100%;\n        overflow-y: visible;\n      }\n    }\n  }\n</style>\n","import App from './AppB2BBanner.svelte';\nimport EleAttr from 'mk-data-attribute';\n\nconst target = document.querySelector(\"#b2b-banner\");\nconst ele = EleAttr(target);\n\nconst delay = ele.int('delay', 100);\n\nsetTimeout(() => {\n\n  new App({\n    target,\n    props: { }\n  });\n}, delay);\n","export default function MkDataAttribute(ele) {\n\n  return {\n\n    int(attrName, defaultVal) {\n   \n      const parsedVal =  parseInt(ele.dataset[attrName]);\n      return isNaN(parsedVal) ? defaultVal : parsedVal;\n    },\n    \n    str(attrName, defaultVal) {\n      \n      const attrVal = ele.dataset[attrName];\n\n      return attrVal || defaultVal;\n    }\n  };\n}\n\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","length","update","pop","i","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","transition_out","o","outros","c","d","create_component","mount_component","customElement","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","active","flip","flipClass","box","question","answer","element_src","url","ctaLabel","ctaText","imgUrl","href","link","DISPLAY_TYPE_MORTGAGE_RESEARCH","filterTagChildren","n","tagName","moveElement","ele","x","animate","transform","duration","easing","onfinish","ev","console","log","displayType","displayDef","size","slider","sliderItemIndex","sliderItemsLength","touchedHandle","slide","clientX","scrollWidth","tagChildren","reduce","sum","child","clientWidth","avgItemWidth","window","func","wait","timeout","args","clearTimeout","setTimeout","debounce","DeviceOrientationEvent","touchedLeftHandle","touchedRightHandle","activeLeftHandle","Math","abs","activeRightHandle","preventDefault","querySelector","delay","int","attrName","defaultVal","parsedVal","parseInt","dataset","isNaN","str","EleAttr","App"],"mappings":"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"}